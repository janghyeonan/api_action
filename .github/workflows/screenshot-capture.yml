name: Website Screenshot Capture

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      delay_seconds:
        description: 'Delay between screenshots (seconds)'
        required: false
        default: '3'
        type: string
      sites_to_capture:
        description: 'Sites to capture (comma-separated: naver,coupang,musinsa,google or "all")'
        required: false
        default: 'all'
        type: string
      viewport_size:
        description: 'Viewport size'
        required: false
        default: '1920x1080'
        type: choice
        options:
          - '1920x1080'
          - '1366x768'
          - '1440x900'
          - '1280x720'

jobs:
  screenshot-capture:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Print workflow info
      run: |
        echo "üöÄ ÏõπÏÇ¨Ïù¥Ìä∏ Ïä§ÌÅ¨Î¶∞ÏÉ∑ Ï∫°Ï≤ò ÏãúÏûë"
        echo "================================"
        echo "Ìä∏Î¶¨Í±∞: ${{ github.event_name }}"
        echo "Î∏åÎûúÏπò: ${{ github.ref }}"
        echo "Ïã§ÌñâÏûê: ${{ github.actor }}"
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "ÎîúÎ†àÏù¥: ${{ github.event.inputs.delay_seconds }}Ï¥à"
          echo "ÎåÄÏÉÅ ÏÇ¨Ïù¥Ìä∏: ${{ github.event.inputs.sites_to_capture }}"
          echo "Î∑∞Ìè¨Ìä∏ ÌÅ¨Í∏∞: ${{ github.event.inputs.viewport_size }}"
        else
          echo "ÎîúÎ†àÏù¥: 3Ï¥à (Í∏∞Î≥∏Í∞í)"
          echo "ÎåÄÏÉÅ ÏÇ¨Ïù¥Ìä∏: Ï†ÑÏ≤¥"
          echo "Î∑∞Ìè¨Ìä∏ ÌÅ¨Í∏∞: 1920x1080 (Í∏∞Î≥∏Í∞í)"
        fi
        echo "ÏãúÍ∞Ñ: $(date)"
        echo "================================"
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Playwright browsers
      run: |
        playwright install chromium
        playwright install-deps
    
    - name: Create screenshots directory
      run: |
        mkdir -p screenshots
        echo "üìÅ Ïä§ÌÅ¨Î¶∞ÏÉ∑ ÎîîÎ†âÌÜ†Î¶¨ ÏÉùÏÑ± ÏôÑÎ£å"
    
    - name: Run screenshot capture
      run: |
        DELAY="${{ github.event.inputs.delay_seconds || '3' }}"
        echo "‚è±Ô∏è ${DELAY}Ï¥à ÎîúÎ†àÏù¥Î°ú Ïä§ÌÅ¨Î¶∞ÏÉ∑ Ï∫°Ï≤ò ÏãúÏûë..."
        python screenshot_scraper.py $DELAY
    
    - name: List captured screenshots
      run: |
        echo "üì∏ Ï∫°Ï≤òÎêú Ïä§ÌÅ¨Î¶∞ÏÉ∑ Î™©Î°ù:"
        ls -la screenshots/
        echo ""
        echo "üìä ÌååÏùº ÌÅ¨Í∏∞ Ï†ïÎ≥¥:"
        du -h screenshots/*
    
    - name: Generate summary
      run: |
        echo "üìã Ï∫°Ï≤ò ÏöîÏïΩ ÏÉùÏÑ±..."
        
        # Ï∫°Ï≤òÎêú ÌååÏùº Í∞úÏàò ÌôïÏù∏
        PNG_COUNT=$(ls screenshots/*.png 2>/dev/null | wc -l)
        REPORT_COUNT=$(ls screenshots/*.txt 2>/dev/null | wc -l)
        TOTAL_SIZE=$(du -sh screenshots/ | cut -f1)
        
        echo "Í≤∞Í≥º ÏöîÏïΩ:" > capture_summary.txt
        echo "=========" >> capture_summary.txt
        echo "PNG ÌååÏùº: ${PNG_COUNT}Í∞ú" >> capture_summary.txt
        echo "Î¶¨Ìè¨Ìä∏ ÌååÏùº: ${REPORT_COUNT}Í∞ú" >> capture_summary.txt
        echo "Ï¥ù ÌÅ¨Í∏∞: ${TOTAL_SIZE}" >> capture_summary.txt
        echo "ÏÉùÏÑ± ÏãúÍ∞Ñ: $(date)" >> capture_summary.txt
        echo "" >> capture_summary.txt
        
        # Í∞Å Ïä§ÌÅ¨Î¶∞ÏÉ∑ ÌååÏùº Ï†ïÎ≥¥ Ï∂îÍ∞Ä
        if [ ${PNG_COUNT} -gt 0 ]; then
          echo "Ïä§ÌÅ¨Î¶∞ÏÉ∑ ÌååÏùº Î™©Î°ù:" >> capture_summary.txt
          for file in screenshots/*.png; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              filesize=$(du -h "$file" | cut -f1)
              echo "  - $filename ($filesize)" >> capture_summary.txt
            fi
          done
        fi
        
        echo "üìÑ ÏöîÏïΩ ÌååÏùº ÏÉùÏÑ± ÏôÑÎ£å"
        cat capture_summary.txt
    
    - name: Upload screenshots as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: website-screenshots-${{ github.run_number }}
        path: |
          screenshots/
          capture_summary.txt
        retention-days: 30
    
    - name: Upload screenshots to release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          screenshots/*.png
          screenshots/*.txt
          capture_summary.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create screenshot gallery (HTML)
      run: |
        echo "üé® Ïä§ÌÅ¨Î¶∞ÏÉ∑ Í∞§Îü¨Î¶¨ ÏÉùÏÑ±..."
        
        cat > screenshots/gallery.html << 'EOF'
        <!DOCTYPE html>
        <html lang="ko">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>ÏõπÏÇ¨Ïù¥Ìä∏ Ïä§ÌÅ¨Î¶∞ÏÉ∑ Í∞§Îü¨Î¶¨</title>
            <style>
                body {
                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                    margin: 0;
                    padding: 20px;
                    background-color: #f5f5f5;
                }
                .container {
                    max-width: 1200px;
                    margin: 0 auto;
                    background: white;
                    padding: 30px;
                    border-radius: 10px;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                }
                h1 {
                    text-align: center;
                    color: #333;
                    margin-bottom: 30px;
                }
                .info {
                    background: #e3f2fd;
                    padding: 15px;
                    border-radius: 5px;
                    margin-bottom: 30px;
                    border-left: 4px solid #2196f3;
                }
                .gallery {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                    gap: 20px;
                }
                .screenshot-item {
                    background: white;
                    border-radius: 8px;
                    overflow: hidden;
                    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
                    transition: transform 0.3s ease;
                }
                .screenshot-item:hover {
                    transform: translateY(-5px);
                }
                .screenshot-item img {
                    width: 100%;
                    height: 200px;
                    object-fit: cover;
                    cursor: pointer;
                }
                .screenshot-info {
                    padding: 15px;
                }
                .site-name {
                    font-weight: bold;
                    font-size: 18px;
                    color: #333;
                    margin-bottom: 5px;
                }
                .site-url {
                    color: #666;
                    font-size: 14px;
                    margin-bottom: 10px;
                }
                .file-info {
                    font-size: 12px;
                    color: #999;
                }
                .modal {
                    display: none;
                    position: fixed;
                    z-index: 1000;
                    left: 0;
                    top: 0;
                    width: 100%;
                    height: 100%;
                    background-color: rgba(0,0,0,0.9);
                }
                .modal-content {
                    margin: auto;
                    display: block;
                    width: 90%;
                    max-width: 1200px;
                    max-height: 90%;
                    object-fit: contain;
                }
                .close {
                    position: absolute;
                    top: 15px;
                    right: 35px;
                    color: #f1f1f1;
                    font-size: 40px;
                    font-weight: bold;
                    cursor: pointer;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>üñºÔ∏è ÏõπÏÇ¨Ïù¥Ìä∏ Ïä§ÌÅ¨Î¶∞ÏÉ∑ Í∞§Îü¨Î¶¨</h1>
                
                <div class="info">
                    <strong>Ï∫°Ï≤ò Ï†ïÎ≥¥:</strong><br>
                    ÏÉùÏÑ± ÏãúÍ∞Ñ: <span id="capture-time"></span><br>
                    GitHub Run: #${{ github.run_number }}<br>
                    Î∏åÎûúÏπò: ${{ github.ref_name }}
                </div>
                
                <div class="gallery" id="gallery">
                    <!-- Ïä§ÌÅ¨Î¶∞ÏÉ∑Îì§Ïù¥ Ïó¨Í∏∞Ïóê ÎèôÏ†ÅÏúºÎ°ú Ï∂îÍ∞ÄÎê©ÎãàÎã§ -->
                </div>
            </div>
            
            <!-- Î™®Îã¨ -->
            <div id="modal" class="modal">
                <span class="close">&times;</span>
                <img class="modal-content" id="modal-img">
            </div>
            
            <script>
                document.getElementById('capture-time').textContent = new Date().toLocaleString('ko-KR');
                
                // Î™®Îã¨ Í∏∞Îä•
                const modal = document.getElementById('modal');
                const modalImg = document.getElementById('modal-img');
                const span = document.getElementsByClassName('close')[0];
                
                function openModal(src) {
                    modal.style.display = 'block';
                    modalImg.src = src;
                }
                
                span.onclick = function() {
                    modal.style.display = 'none';
                }
                
                window.onclick = function(event) {
                    if (event.target == modal) {
                        modal.style.display = 'none';
                    }
                }
            </script>
        </body>
        </html>
        EOF
        
        echo "‚úÖ Í∞§Îü¨Î¶¨ HTML ÏÉùÏÑ± ÏôÑÎ£å"
    
    - name: Display completion message
      run: |
        echo ""
        echo "üéâ Ïä§ÌÅ¨Î¶∞ÏÉ∑ Ï∫°Ï≤ò ÏôÑÎ£å!"
        echo "======================"
        echo "‚úÖ Î™®Îì† ÏõπÏÇ¨Ïù¥Ìä∏Ïùò Ïä§ÌÅ¨Î¶∞ÏÉ∑Ïù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ï∫°Ï≤òÎêòÏóàÏäµÎãàÎã§."
        echo "üìÅ ArtifactsÏóêÏÑú Îã§Ïö¥Î°úÎìú Í∞ÄÎä•Ìï©ÎãàÎã§."
        echo "üîó Actions ÌÉ≠ > Ïù¥ ÏõåÌÅ¨ÌîåÎ°úÏö∞ Ïã§Ìñâ > Artifacts ÏÑπÏÖòÏóêÏÑú ÌôïÏù∏ÌïòÏÑ∏Ïöî."
        echo ""
        echo "Ìè¨Ìï®Îêú ÌååÏùº:"
        echo "  üì∏ PNG Ïä§ÌÅ¨Î¶∞ÏÉ∑ ÌååÏùºÎì§"
        echo "  üìÑ ÏÉÅÏÑ∏ Î¶¨Ìè¨Ìä∏ (TXT)"
        echo "  üìä Ï∫°Ï≤ò ÏöîÏïΩ (TXT)"
        echo "  üé® Í∞§Îü¨Î¶¨ Î∑∞Ïñ¥ (HTML)"
        echo ""
        echo "Artifact Ïù¥Î¶Ñ: website-screenshots-${{ github.run_number }}"
